#!/bin/sh
# pbv4-flash-uart: Flash a V4 power board using a USB-to-serial cable.

set -e  # Exit if any subcommand fails.

this_script="$(realpath "$0")"
tools_bin_dir="$(dirname "$this_script")"

# Parse command line args.
device="$1"
image="$2"
serial_num="$3"
if [ -z "$device" -o -z "$image" ]; then
  echo "Usage:"
  echo "  $0 <device> <image> [<serial_num>]"
  echo "Example:"
  echo "  $0 /dev/ttyUSB0 pbv4.bin 12-34-56-78"
  exit 1
fi

if [ ! -e "$device" ]; then
  echo "error: $device does not exist (try power cycling the board)"
  exit 1
fi

if [ ! -e "$image" ]; then
  echo "error: $image does not exist"
  exit 1
fi

# Check dependencies are available.
have_stm32flash=$(which stm32flash 2>/dev/null || true)
if [ -z "$have_stm32flash" ]; then
  echo "error: 'stm32flash' command not found"
  exit 1
fi
have_perl=$(which perl 2>/dev/null || true)
if [ -z "$have_perl" -a -n "$serial_num" ]; then
  echo "error: 'perl' command not found"
fi

# If a serial number was specified, bake it into the image.
if [ -n "$serial_num" ]; then
  baked_image="$(mktemp)"
  "$tools_bin_dir/pbv4-bake-serial-num" "$serial_num" < "$image" > "$baked_image"
  image="$baked_image"
fi

# Flash the board.
sudo stm32flash -b 115200 -w "$image" -v "$device"

# Clean up the temporary baked image, if necessary.
if [ -n "$serial_num" ]; then
  rm -f "$baked_image"
fi

echo "Success."
